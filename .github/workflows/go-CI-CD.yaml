name: Go Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21.6]
        os: [linux, windows, darwin]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      # Passo para listar arquivos no diretório de trabalho atual
      - name: List files in the current directory
        run: ls -la

      # Ou, se você quiser listar arquivos em um diretório específico, use:
      #- name: List files in a specific directory
      #  run: ls -la ./calculador-de-plr

      - name: Build
        run: |
          env GOOS=${{ matrix.os }} GOARCH=amd64 go build -v -o plr_calculator-${{ matrix.os }}-${{ github.sha }} ./cmd

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: plr_calculator-${{ matrix.os }}-${{ github.sha }}
          path: plr_calculator-${{ matrix.os }}-${{ github.sha }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      # Passo para listar arquivos no diretório de trabalho atual
      - name: List files in the current directory
        run: ls -la && pwd

      # Ou, se você quiser listar arquivos em um diretório específico, use:
      #- name: List files in a specific directory
      #  run: ls -la ./calculador-de-plr

      - name: Zip the build directories
        run: |
          zip -r plr_calculator-darwin.zip plr_calculator-darwin-${{ github.sha }}
          zip -r plr_calculator-linux.zip plr_calculator-linux-${{ github.sha }}
          zip -r plr_calculator-windows.zip plr_calculator-windows-${{ github.sha }}

#      - name: Upload Release Asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: /home/runner/work/calculador-de-plr/calculador-de-plr/plr_calculator*
#          asset_name: plr_calculator-${{ github.run_number }}.zip
#          asset_content_type: application/zip

      - name: Upload Darwin Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./plr_calculator-darwin.zip
          asset_name: plr_calculator-darwin-${{ github.run_number }}.zip
          asset_content_type: application/zip

      - name: Upload Linux Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./plr_calculator-linux.zip
          asset_name: plr_calculator-linux-${{ github.run_number }}.zip
          asset_content_type: application/zip

      - name: Upload Windows Build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./plr_calculator-windows.zip
          asset_name: plr_calculator-windows-${{ github.run_number }}.zip
          asset_content_type: application/zip

